# @configure_input@

VPATH=@srcdir@
srcdir=@srcdir@
SRCPFX=$(srcdir)/
SRCPFX_INCPATH=-I$(srcdir)

prefix=@prefix@
exec_prefix=@exec_prefix@
MANDIR=/usr/share/man
BINDIR=@bindir@
ETCDIR=@sysconfdir@/simta
SBINDIR=@sbindir@
LIBEXECDIR=@libexecdir@/simta
spool=/var/spool
SPOOLDIR=$(spool)/simta/
LOCAL_Q=${SPOOLDIR}local
SLOW_Q=${SPOOLDIR}slow
FAST_Q=${SPOOLDIR}fast
DEAD_Q=${SPOOLDIR}dead
SIMTA_ETC=${SPOOLDIR}etc
SIMTA_COMMAND=${SPOOLDIR}command

SRC=    @LDAP_SRC@ @SSL_SRC@ @LMDB_SRC@ \
	daemon.c receive.c argcargv.c envelope.c \
	simsend.c simconnect.c rcptlist.c address.c \
	simalias.c bounce.c wildcard.c yasl.c srs.c
COMMONOBJ=	@LDAP_OBJ@ @SSL_OBJ@ @LMDB_OBJ@ @YASL_OBJ@ \
		address.o argcargv.o bounce.o dns.o envelope.o \
		expand.o header.o line_file.o ll.o ml.o q_cleanup.o \
		queue.o red.o simta.o smtp.o srs.o spf.o wildcard.o
SIMTAOBJ=	${COMMONOBJ} daemon.o dmarc.o receive.o
SIMCONOBJ=	${COMMONOBJ} simconnect.o
SIMCOBJ=	${COMMONOBJ} simc.o
SIMDAOBJ=	simda.o
SIMDMARCOBJ=	${COMMONOBJ} simdmarc.o dmarc.o
SIMSENDOBJ=	${COMMONOBJ} simsend.o
SIMSPFOBJ=	${COMMONOBJ} simspf.o
SIMSRSOBJ=	${COMMONOBJ} simsrs.o
SIMLOGOBJ=	simlog.o
EXPANDEROBJ=	${COMMONOBJ} expander.o
SIMRBLOBJ=	${COMMONOBJ} simrbl.o
SIMREVERSEOBJ=	${COMMONOBJ} simreverse.o
QRUNNEROBJ=	${COMMONOBJ} q_runner.o
QCLEANUPOBJ=	${COMMONOBJ} q_cleanup.o
SIMALIASOBJ=	${COMMONOBJ} simalias.o
SLAOBJ=		sla.o
SIMCKOBJ=	simck.o md.o

CC=		@CC@
OPTOPTS=	@OPTOPTS@
INSTALL=	@INSTALL@
INCPATH  =	-I.
INCPATH +=	@CPPFLAGS@
INCPATH +=	@DENSER_CFLAGS@
INCPATH +=	@JEMALLOC_CFLAGS@
INCPATH +=	@SNET_CFLAGS@
INCPATH +=	@YASL_CFLAGS@
INCPATH +=	@LDAP_CPPFLAGS@
INCPATH +=	@LIBIDN_CFLAGS@
INCPATH +=	@LIBSASL_CFLAGS@
INCPATH +=	@LIBSSL_CFLAGS@
INCPATH +=	@LIBWRAP_CPPFLAGS@
INCPATH +=	@OPENDKIM_CFLAGS@
INCPATH +=	${SRCPFX_INCPATH}
DEFS=		-g -DLIBEXECDIR=\"$(LIBEXECDIR)\" @DEFS@
LIBPATH	=	@LDFLAGS@
LIBPATH += 	@LDAP_LDFLAGS@
LIBPATH +=	@LIBWRAP_LDFLAGS@
LIBS +=		@DENSER_LIBS@
LIBS +=		@JEMALLOC_LIBS@
LIBS +=		@SNET_LIBS@
LIBS +=		@YASL_LIBS@
LIBS +=		@LIBIDN_LIBS@
LIBS +=		@LIBSASL_LIBS@
LIBS +=		@LIBSSL_LIBS@
LIBS +=		@OPENDKIM_LIBS@
LIBS +=		@EXTRALIBS@
TAGSFILE=	tags
CFLAGS=		${DEFS} ${OPTOPTS} ${INCPATH}

SIMTALIBPATH=	${LIBPATH}
SIMTALIBS=	${LIBS}

MAN1TARGETS=	simsendmail.1
MAN8TARGETS=	simta.8
BINTARGETS=	simrbl simreverse simalias simexpander simconnect
TARGETS=	simta simconnect simsendmail q_runner simexpander \
                sla simc simda simspf simdmarc simsrs \
		${BINTARGETS}

all : ${TARGETS}

install : all FRC
	@mkdir -p ${DESTDIR}${SBINDIR} ${DESTDIR}${BINDIR} ${DESTDIR}${LIBEXECDIR} ${DESTDIR}${MANDIR}/man1 ${DESTDIR}${MANDIR}/man8 ${DESTDIR}$(spool)
	${INSTALL} -m 0750 @SUID_OWNER@ -d ${DESTDIR}${SPOOLDIR} ${DESTDIR}${LOCAL_Q} ${DESTDIR}${SLOW_Q} ${DESTDIR}${FAST_Q} ${DESTDIR}${DEAD_Q} ${DESTDIR}${SIMTA_ETC} ${DESTDIR}${SIMTA_COMMAND}
	${INSTALL} -m 755 -c simta ${DESTDIR}${SBINDIR}/
	${INSTALL} -m 6755 @SUID_OWNER@ -c simsendmail ${DESTDIR}${SBINDIR}/
	${INSTALL} -m 6755 @SUID_OWNER@ -c simc ${DESTDIR}${SBINDIR}/
	${INSTALL} -m 6750 -c simda ${DESTDIR}${LIBEXECDIR}/
	for i in ${BINTARGETS}; do \
	    ${INSTALL} -m 0755 -c $$i ${DESTDIR}${BINDIR}; \
	done
	ln -f ${DESTDIR}${SBINDIR}/simsendmail ${DESTDIR}${SBINDIR}/sendmail
	for i in ${MAN1TARGETS}; do \
	    ${INSTALL} -m 0644 -c ${SRCPFX}$$i ${DESTDIR}${MANDIR}/man1/; \
	done
	for i in ${MAN8TARGETS}; do \
	    ${INSTALL} -m 0644 -c ${SRCPFX}$$i ${DESTDIR}${MANDIR}/man8/; \
	done

simta : ${SIMTAOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simta ${SIMTAOBJ} ${SIMTALIBPATH} ${SIMTALIBS}

simck : ${SIMCKOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simck ${SIMCKOBJ} \
		${SIMTALIBPATH} ${SIMTALIBS}

sla : ${SLAOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o sla ${SLAOBJ} \
		${SIMTALIBPATH} ${SIMTALIBS}

simc : ${SIMCOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simc ${SIMCOBJ} \
		${SIMTALIBPATH} ${SIMTALIBS}

simda : ${SIMDAOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simda ${SIMDAOBJ}

simspf : ${SIMSPFOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simspf ${SIMSPFOBJ} \
		${SIMTALIBPATH} ${SIMTALIBS}

simdmarc : ${SIMDMARCOBJ} Makefile
	 ${CC} ${CFLAGS} ${LDFLAGS} -o simdmarc ${SIMDMARCOBJ} \
	 	${SIMTALIBPATH} ${SIMTALIBS}

simsrs : ${SIMSRSOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simsrs ${SIMSRSOBJ} \
		${SIMTALIBPATH} ${SIMTALIBS}

simsendmail : ${SIMSENDOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simsendmail ${SIMSENDOBJ} \
		${SIMTALIBPATH} ${SIMTALIBS}

simalias : ${SIMALIASOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simalias ${SIMALIASOBJ} ${SIMTALIBPATH} \
	${SIMTALIBS}

simlog : ${SIMLOGOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simlog ${SIMLOGOBJ} ${LIBPATH} ${LIBS}

simexpander : ${EXPANDEROBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simexpander ${EXPANDEROBJ} ${SIMTALIBPATH} ${SIMTALIBS}

simrbl : ${SIMRBLOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simrbl ${SIMRBLOBJ} ${SIMTALIBPATH} ${SIMTALIBS}

simreverse : ${SIMREVERSEOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simreverse ${SIMREVERSEOBJ} ${SIMTALIBPATH} ${SIMTALIBS}

simconnect : ${SIMCONOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o simconnect ${SIMCONOBJ} ${SIMTALIBPATH} ${SIMTALIBS}

q_runner : ${QRUNNEROBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o q_runner ${QRUNNEROBJ} ${SIMTALIBPATH} ${SIMTALIBS}

q_cleanup : ${QCLEANUPOBJ} Makefile
	${CC} ${CFLAGS} ${LDFLAGS} -o q_cleanup ${QCLEANUPOBJ} ${LIBPATH} ${LIBS}

address.o: config.h dns.h envelope.h expand.h header.h line_file.h ll.h queue.h red.h simta.h simta_ldap.h
argcargv.o: argcargv.h config.h
bounce.o: config.h envelope.h expand.h line_file.h ll.h ml.h queue.h simta.h smtp.h
daemon.o: config.h envelope.h ll.h queue.h simta.h tls.h
dmarc.o: config.h dmarc.h dns.h
dn.o: dn.h
dns.o: config.h dns.h envelope.h expand.h ll.h queue.h red.h simta.h
envelope.o: config.h envelope.h header.h line_file.h ll.h queue.h simta.h
expand.o: config.h dn.h envelope.h expand.h header.h line_file.h ll.h queue.h simta.h simta_ldap.h
expander.o: config.h envelope.h expand.h line_file.h ll.h ml.h queue.h simta.h smtp.h
header.o: config.h envelope.h header.h line_file.h queue.h simta.h
line_file.o: config.h line_file.h
ll.o: config.h ll.h
md.o: config.h simta.h
ml.o: config.h envelope.h line_file.h ml.h queue.h simta.h
q_cleanup.o: config.h envelope.h ll.h queue.h simta.h
q_runner.o: config.h envelope.h expand.h line_file.h ll.h ml.h queue.h simta.h smtp.h
queue.o: config.h dns.h envelope.h expand.h line_file.h ll.h ml.h queue.h red.h simta.h smtp.h wildcard.h
receive.o: argcargv.h config.h dns.h envelope.h expand.h header.h line_file.h ll.h md.h queue.h red.h simta.h simta_ldap.h spf.h
red.o: argcargv.h config.h dns.h envelope.h expand.h ll.h ml.h queue.h red.h simta.h simta_ldap.h
simalias.o: argcargv.h config.h dns.h envelope.h expand.h ll.h ml.h queue.h red.h simta.h simta_ldap.h
simck.o: config.h md.h
simdmarc.o: config.h dmarc.h simta.h
simlog.o: config.h simta.h
simrbl.o: config.h dns.h envelope.h ll.h simta.h
simreverse.o: config.h dns.h envelope.h ll.h simta.h
simsend.o: config.h envelope.h header.h line_file.h queue.h simta.h
simspf.o: config.h spf.h simta.h
simsrs.o: config.h srs.h simta.h
simta.o: argcargv.h config.h dns.h envelope.h expand.h ll.h ml.h queue.h red.h simta.h simta_ldap.h
simta_ldap.o: argcargv.h config.h dn.h envelope.h expand.h header.h ll.h queue.h simta.h simta_ldap.h
sla.o: config.h envelope.h expand.h line_file.h ll.h queue.h simta.h
smtp.o: argcargv.h config.h dns.h envelope.h header.h line_file.h queue.h simta.h smtp.h
simconnect.o: argcargv.h config.h dns.h envelope.h header.h line_file.h queue.h simta.h smtp.h
tls.o: config.h tls.h
wildcard.o: config.h wildcard.h

FRC :

DISTDIR=@PACKAGE_NAME@-@PACKAGE_VERSION@

dist : clean
	mkdir -p ${DESTDIR}dist/${DISTDIR}
	tar -c -f - -X .distignore . | tar xpf - -C ${DESTDIR}dist/${DISTDIR}
	cd ${DESTDIR}dist; tar cfz ${DISTDIR}.tar.gz ${DISTDIR}

rpm : dist
	rpmbuild -ta ${DESTDIR}dist/${DISTDIR}.tar.gz

clean :
	rm -f a.out core* *.o *.bak *[Ee]rrs tags
	rm -f ${TARGETS}
	rm -f simlog

realclean : clean
	rm -rf autom4te.cache
	rm -f config.status config.log config.h
	rm -f Makefile

tags : ${SRC}
	cwd=`pwd`; \
	for i in ${SRC}; do \
	    ctags -t -a -f ${TAGSFILE} $$cwd/$$i; \
	done

depend :
	echo for now, no...
#	for i in ${SRC} ; do \
#	    echo ${CC} -M ${DEFS} ${INCPATH} $$i
#	done
#makedep; done
#| \
#	    awk ' { if ($$1 != prev) { print rec; rec = $$0; prev = $$1; } \
#		else { if (length(rec $$2) > 78) { print rec; rec = $$0; } \
#		else rec = rec " " $$2 } } \
#		END { print rec } ' >>
#	sed -n '1,/^# DO NOT DELETE THIS LINE/p' Makefile > Makefile.tmp
#	cat makedep >> Makefile.tmp
#	rm makedep
#	echo '# DEPENDENCIES MUST END AT END OF FILE' >> Makefile.tmp
#	echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> Makefile.tmp
#	echo '# see make depend above' >> Makefile.tmp
#	rm -f Makefile.bak
#	cp Makefile Makefile.bak
#	mv Makefile.tmp Makefile

# DO NOT DELETE THIS LINE
