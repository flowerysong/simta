#
# simta.conf template
#

# BASE_DIR <base directory>
#
# Base directory for simta queues and queue-like things.
#
#BASE_DIR /var/spool/simta

# PID_FILE <path>
#
# File to store the main simta pid in.
#
#PID_FILE /var/run/simta.pid

# MASQUERADE <hostname>
#
# Hostname to use for locally generated mail. Defaults to the system
# hostname.

# SMTP_MODE <NORMAL|OFF|REFUSE|GLOBAL_RELAY|TEMPFAIL|TARPIT>
#
# NORMAL        Treat all incoming connections normally
# OFF           Disable all SMTP service
# REFUSE        Listen on configured ports, but refuse connections with a
#               "554 No SMTP service here" banner
# GLOBAL_RELAY  Accept all mail regardless of security concerns
#               Don't enable this unless you know what you're doing,
#               because you become an open relay
# TEMPFAIL      Set the SMTP default mode to TEMPFAIL
# TARPIT        Set the SMTP default mode to TARPIT, which delays SMTP replies
#               and rejects all mail transactions after the message data is
#               received
#
#SMTP_MODE NORMAL

# SMTP_PORT <ON|OFF>
# TLS_LEGACY_PORT <ON|OFF>
# SUBMISSION_PORT <ON|OFF>
#
# Enable or disable service on ports 25, 465 (smtps), and 587 (submission)
#
#SMTP_PORT ON
#TLS_LEGACY_PORT OFF
#SUBMISSION_PORT OFF

# IPV4 <ON|OFF>
# IPV6 <ON|OFF>
#
# Enable or disable the use of IPv4 and IPv6 for communication.
#
#IPV4 ON
#IPV6 OFF

# RBL_ACCEPT <dns zone>
# RBL_BLOCK <dns zone> <url>
# RBL_LOG_ONLY <dns zone>
# RBL_TRUST <dns zone>
#
# Adds a DNSBL rule for connecting IPs. If an address is found in a
# BLOCK list, it is blocked and <url> is returned in the SMTP error
# message. If it is found in an ACCEPT list, it will be accepted
# and no further lookups will take place. If it is found in a TRUST
# list, it will be ACCEPTed and exempted from some checks, such as
# MAX_FAILED_RCPTS. If it is found on a LOG_ONLY list and verbose
# logging is enabled, it will log that it was found but continue
# checking for a BLOCK or ACCEPT. Order in the config file determines
# lookup precedence.

# CONNECTION_LIMIT <max>
# CONNECTION_THROTTLE <max>
# CONNECTION_THROTTLE_INTERVAL <seconds>
#
# CONNECTION_LIMIT places a global limit on the number of open
# inbound connections. CONNECTION_THROTTLE places a global
# limit on the number of new connections that can be opened per
# CONNECTION_THROTTLE_INTERVAL. 0 means no limit.
#
#CONNECTION_LIMIT 0
#CONNECTION_THROTTLE 0
#CONNECTION_THROTTLE_INTERVAL 1

# CONNECTION_LIMIT_PER_HOST <max>
# CONNECTION_THROTTLE_PER_HOST <max>
#
# Like CONNECTION_LIMIT and CONNECTION_THROTTLE, but applied per
# individual source IP.
#
#CONNECTION_LIMIT_PER_HOST 0
#CONNECTION_THROTTLE_PER_HOST 0

# LIBWRAP_URL <url>
#
# URL to return when rejecting connections due to tcpwrappers

# PUNISHMENT <TEMPFAIL|TARPIT|DISCONNECT>
#
# Bad client behaviour will make simta apply this punishment when certain other
# config options are set.
#
# TEMPFAIL      The SMTP_MODE will switch to TEMPFAIL
# TARPIT        The SMTP_MODE will switch to TARPIT
# DISCONNECT    The SMTP session will immediately terminate
#
#PUNISHMENT TEMPFAIL

# BANNER_DELAY <seconds>
#
# Number of seconds to delay writing the initial banner.
#
#BANNER_DELAY 0

# BANNER_PUNISH_WRITES <ON|OFF>
#
# If enabled, simta will apply PUNISHMENT to clients who write during
# BANNER_DELAY.
#
#BANNER_PUNISH_WRITES OFF

# RDNS_CHECK <STRICT|RELAXED|CHILLAXED>
#
# STRICT        Reject connections with invalid rDNS
# RELAXED       Allow connections with invalid rDNS
# CHILLAXED     Also allow connections with errors during rDNS lookup
#
#RDNS_CHECK STRICT

# RDNS_URL <url>
#
# URL to return when rejecting a connection due to RDNS_CHECK STRICT

# SUBMISSION_MODE <MSA|MTA|MTA_STRICT>
#
# MSA           Add missing required headers that can be autogenerated
# MTA           Check for missing headers or bad header syntax and expose
#               the result to the content filter
# MTA_STRICT    Reject mail that fails RFC compliance checks
#
#SUBMISSION_MODE MTA

# SMTP_STRICT_SYNTAX <ON|OFF>
#
# Make SMTP command parsing more strict. Enabling this is probably a
# bad idea, because people are bad at RFC compliance.
#
#SMTP_STRICT_SYNTAX OFF

# TLS <ON|OFF>
#
# Enable or disable inbound TLS.
#TLS OFF

# TLS_CERT <path>
# TLS_CERT_KEY <path>
#
# Path to certificate and private key. No default value.

# TLS_CA_DIRECTORY <path>
# TLS_CA_FILE <path>
#
# Configure trusted certificate authorities. No default value;
# depending on how your SSL library was compiled there may be
# system-wide defaults that are used.

# TLS_CIPHERS <cipher string>
#
# Set a custom cipher string for TLS connections.
#
#TLS_CIPHERS EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:DH+AES128:DH+AES256:DH+3DES:!MD5

# AUTHN <OFF|SASL|HONEYPOT>
#
# OFF           No authentication support
# SASL          Require SASL authentication before accepting mail
# HONEYPOT      Advertise fake authentication support, and punish people who
#               try to use it
#
#AUTHN OFF

# AUTHZ_DEFAULT <ALLOW|DENY>
#
# Determines the default authorization result for successfully
# authenticated identities.
#
#AUTHZ_DEFAULT ALLOW

# AUTHZ_DNS <ALLOW|DENY> <dns zone>
#
# Adds a DNSBL authorization rule. simta will query identity.zone and
# ALLOW or DENY the identity if the record exists. Order in the config
# file determines lookup precedence.

# SENDER_CHECKING <ON|OFF>
#
# Verify that a domain name exists before accepting mail from an address
# at that domain.
#
#SENDER_CHECKING ON

# MAX_FAILED_RCPTS <max>
#
# Set the maximum number of failed RCPT commands. If this limit is reached,
# punish the client. 0 is unlimited.
#
#MAX_FAILED_RCPTS 0

# USER_RBL_ACCEPT <dns zone>
# USER_RBL_BLOCK <dns zone> <url>
# USER_RBL_LOG_ONLY <dns zone>
# USER_RBL_TRUST <dns zone>
#
# Add a user DNSBL. These are only applied if the user has enabled RBLs in
# their LDAP entry.

# SRS <OFF|ALWAYS|FOREIGN|SMART>
#
# Determines whether to use the Sender Rewriting Scheme to rewrite the
# RFC5321.MailFrom address on incoming mail.
#
# OFF           Do not rewrite the address
# ALWAYS        Always rewrite the address
# FOREIGN       Rewrite all addresses that are not already from the SRS_DOMAIN
# SMART         Only rewrite addresses that would fail SPF on the next hop
#
#SRS OFF

# SRS_DOMAIN <hostname>
#
# Sets the domain to use when rewriting addresses. Defaults to MASQUERADE,
# which defaults to the hostname.

# SRS_SECRET <secret>
#
# Sets the secret to use when generating SRS hashes. This must be set if SRS
# is anything other than OFF.

# CHECKSUM_ALGORITHM <algorithm>
#
# Enables message checksums and determines what algorithm to use.
# Which digest algorithms are available depends on your TLS library's
# configuration.

# CHECKSUM_BODY <ON|OFF>
#
# If enabled, simta will calculate a second, body-only checksum during
# message receipt.
#
#CHECKSUM_BODY ON

# SPF <ON|OFF|STRICT>
#
# Determines the handling of Sender Policy Framework checks.
#
# OFF           Do not check SPF
# ON            Check SPF and expose the result to the content filter
# STRICT        Check SPF and reject mail when the result is 'fail'; if the
#               result is 'temperror' mail will be tempfailed
#
#SPF ON

# DKIM_VERIFY <ON|OFF>
#
# Determines whether inbound mail will be checked for valid Domain Keys
# Identified Mail signatures.
#
#DKIM_VERIFY ON

# DMARC <ON|OFF|STRICT>
#
# Controls Domain-based Message Authentication, Reporting &
# Conformance. Before enabling this at least one of SPF and
# DKIM_VERIFY must be enabled, and both should be enabled.
#
# OFF           Do not check DMARC
# ON            Check DMARC and expose the result to the content filter
# STRICT        Check DMARC and reject mail when the result is 'reject'
#
#DMARC ON

# PUBLICSUFFIX_FILE <path>
#
# Path to a copy of the Public Suffix List (available from
# https://publicsuffix.org/). Without this, DMARC checks will not
# attempt to determine the Organizational Domain and will return
# inaccurate results for subdomains.

# MAX_RECEIVED_HEADERS <max>
#
# Maximum number of Received: headers on incoming mail. If a piece of mail
# exceeds this limit, it will be rejected. This will eventually terminate
# trivial mail loops.
#
#MAX_RECEIVED_HEADERS 100

# SEEN_BEFORE_DOMAIN <hostname>
#
# If set, simta will inject a SIMTA-Seen-Before trace header into
# outgoing mail. Incoming mail with a matching SIMTA-Seen-Before
# header will be accepted and deleted.

# CONTENT_FILTER <filter path>
#
# Call a content filter to examine the DATA portion of an incoming SMTP
# message.
#
# When the content filter runs, the following environment variables are set:
#
# SIMTA_DFILE                   path to message's Dfile
# SIMTA_TFILE                   path to message's tfile
# SIMTA_REMOTE_IP               IP address of remote host
# SIMTA_REMOTE_HOSTNAME         hostname of remote host
# SIMTA_REVERSE_LOOKUP          forward-confirmed reverse DNS status
#       REVERSE_MATCH               0
#       REVERSE_ERROR               1
#       REVERSE_UNKNOWN             2
#       REVERSE_MISMATCH            3
#       REVERSE_UNRESOLVED          4
# SIMTA_SMTP_MAIL_FROM          message's RFC5321.MailFrom
# SIMTA_SMTP_HELO               HELO/EHLO hostname given by remote host
# SIMTA_HEADER_FROM             message's RFC5322.From
# SIMTA_MID                     message's RFC5322.Message-ID
# SIMTA_UID                     message UID assigned by simta
# SIMTA_PID                     calling process's PID
# SIMTA_CID                     calling process's Connection ID
# SIMTA_WRITE_BEFORE_BANNER     whether the client wrote before the SMTP banner
# SIMTA_AUTH_ID                 authenticated identity, if any
# SIMTA_CHECKSUM                message checksum
# SIMTA_CHECKSUM_SIZE           number of bytes that were checksummed
# SIMTA_BODY_CHECKSUM           message body checksum
# SIMTA_BODY_CHECKSUM_SIZE      number of bytes that were checksummed
# SIMTA_BAD_HEADERS             result of cursory header validity check
# SIMTA_SPF_RESULT              result of SPF check
# SIMTA_DMARC_RESULT            result of DMARC check
#
# The first line of text returned from the content filter will be
# logged and displayed to the SMTP client.
#
# The content filter return code is a bitfield.
#
# Results:
# 0x0000 0000   MESSAGE_ACCEPT
# 0x0000 0001   MESSAGE_TEMPFAIL
# 0x0000 0010   MESSAGE_REJECT
#
# Options:
# 0x0000 0100   MESSAGE_DELETE
# 0x0000 1000   MESSAGE_DISCONNECT
# 0x0001 0000   MESSAGE_TARPIT
# 0x0010 0000   MESSAGE_JAIL
# 0x0100 0000   MESSAGE_BOUNCE
#
# If the content filter process is terminated abnormally, it will
# return MESSAGE_TEMPFAIL.

# FILTER_TRUSTED <ON|OFF>
#
# Determines whether mail from clients on an RBL_TRUST list will be
# run through the CONTENT_FILTER.
#
#FILTER_TRUSTED ON

# CONTENT_FILTER_URL <url>
#
# URL to return when the content filter rejects mail and doesn't provide
# a message of its own.

# MAX_MESSAGE_SIZE <bytes>
#
# Maximum message size to accept. -1 is unlimited.
#
#MAX_MESSAGE_SIZE -1

# AGGRESSIVE_RECEIPT <max>
#
# The maximum number of pending messages to accept before triggering a
# delivery attempt. -1 is unlimited.
#
#AGGRESSIVE_RECEIPT 50

# RECEIVE_QUEUE_STRATEGY <FAST|SLOW|JAIL>
#
# Determines the default disposition of received mail.
#
# FAST          The Receive child will attempt initial delivery
# SLOW          Skip the initial delivery attempt
# JAIL          Instead of delivering it, jail incoming mail
#
#RECEIVE_QUEUE_STRATEGY FAST

# RECEIVE_ACCEPTED_MESSAGE_TIMER <seconds>
#
# The number of seconds that simta will wait for additional mail
# transactions before triggering a delivery attempt for accepted mail.
# -1 disables the timer.
#
#RECEIVE_ACCEPTED_MESSAGE_TIMER -1

# ALIAS_FILE <alias file>
#
# Sets the location of the default alias file.
#
#ALIAS_FILE /etc/aliases

# ALIAS_DB [database file]
#
# Sets (or unsets) the default alias database. The default value is set at
# compile time.
#
#ALIAS_DB /etc/alias.db

# AGGRESSIVE_EXPANSION <ON|OFF>
#
# If enabled, simta will expand all messages in the unexpanded queue before
# making a delivery attempt.
#
#AGGRESSIVE_EXPANSION ON

# AGGRESSIVE_DELIVERY <ON|OFF>
#
# During delivery, retry MX entries that accepted at least one
# message.
#
#AGGRESSIVE_DELIVERY ON

# DELIVER_TLS <OPTIONAL|REQUIRED|DISABLED>
#
# OPTIONAL      Attempt to negotiate TLS for outbound connections if STARTTLS
#               support is advertised; fall back to plain if TLS negotiation
#               fails.
# REQUIRED      Require successful TLS negotiation on all outbound connections.
#               This is only useful in limited circumstances, because working
#               TLS support is far from universal.
# DISABLED      Do not attempt TLS negotiation for outbound connections.
#
#DELIVER_TLS OPTIONAL

# DELIVER_TLS_CERT <OPTIONAL|REQUIRED>
#
# OPTIONAL      Attempt to verify the cert, but proceed anyway if it fails.
# REQUIRED      Abort if cert verification fails. Enabling this is currently a
#               bad idea, because people are bad at TLS.
#
#DELIVER_TLS_CERT OPTIONAL

# DELIVER_TLS_CIPHERS <cipher string>
#
# Set a custom cipher string for outbound TLS connections only. If left unset,
# an explicitly set TLS_CIPHERS will apply to both inbound and outbound.
#
#DELIVER_TLS_CIPHERS EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:ECDH+3DES:RSA+3DES:!MD5

# DELIVER_MESSAGES_PER_CONNECTION <max>
#
# Set the maximum number of mail transactions attempted in a single outbound
# connection. 0 is unlimited.
#
#DELIVER_MESSAGES_PER_CONNECTION 0

# DELIVER_QUEUE_STRATEGY <FIFO|SHUFFLE>
#
# Order in which messages in a delivery queue are delivered.
#
# FIFO          First in, first out
# SHUFFLE       Random ordering
#
#DELIVER_QUEUE_STRATEGY FIFO

# DEFAULT_LOCAL_MAILER <arg> [arg ...]
#
# Set the mailer used for local delivery. The default value can be
# changed at compile time and may not be what's listed here.
#
#DEFAULT_LOCAL_MAILER /usr/libexec/simta/simda $R /usr/bin/procmail -f $S

# PUNT <hostname>
#
# Punt undeliverable mail to the specified host.

# JAIL <hostname>
#
# Send mail that is jailed by the content filter to the specified host.

# BOUNCE_SECONDS <seconds>
#
# How many seconds we try to deliver a message before we bounce it as
# undeliverable.
#
#BOUNCE_SECONDS 259200

# BOUNCE_SIZE <max>
#
# Messages larger than this will be truncated to just the headers when
# included in a bounce message.
#
#BOUNCE_SIZE 524288

# QUEUE_WAIT_MIN <min>
# QUEUE_WAIT_MAX <max>
#
# Set the minimum and maximum time to wait between delivery attempts
# for queued mail. If a host is accepting mail, queue runs for that
# host will be QUEUE_WAIT_MIN seconds apart. If a host is down,
# simta will back off the frequency of attempts until they reach
# QUEUE_WAIT_MAX.
#
#QUEUE_WAIT_MIN 300
#QUEUE_WAIT_MAX 4800

# RED rules
#
# @<domain> <RrED> <rule> [args]
#
# Per-domain [R]eceive, [E]xpand, and [D]eliver settings.
#
# If domain is 'localhost', the rule applies to the hostname of the system.
#
# 'r' and 'R' rules are used to determine whether to accept a
# recipient during the Receive phase. Rules are processed in the order
# they occur in the config file; 'R' rules terminate processing if
# the recipient is found using the specified method, while 'r' rules
# terminate processing if they aren't.
#
# 'E' rules are used during the Expand phase to expand addresses.
#
# 'D' rules are used during the Deliver phase.

# @<domain> R ACCEPT
#
# Accept mail for any recipient.

# @<domain> RE ALIAS [alias database]
#
# Accept mail for recipients in ALIAS_DB or an alternate database.

#@localhost RE ALIAS
#
# @<domain> RE PASSWORD [passwd file]
#
# Accept mail for recipients with an entry in /etc/passwd or an
# alternate file with the same syntax. Expansion will look for a
# .forward file in the user's home directory.
#
#@localhost RE PASSWORD

# @<domain> RE LDAP <config file>
#
# Use LDAP lookups to determine valid recipients.

# @<domain> RE SRS [secret]
#
# Accept mail for valid SRS addresses using SRS_SECRET or
# an alternate secret.

# @<domain> R SECONDARY_MX <secondary MX name>
#
# Act as a store-and-forward backup MX. Accept mail for any recipient
# and suppress delivery to MXs at or below our own precedence level.

# @<domain> D MAILER DEFAULT
# @<domain> D MAILER <arg> [arg ...]
#
# Use the specified external mailer to deliver messages.
#
#@localhost D MAILER DEFAULT

# @<domain> D TLS <OPTIONAL|REQUIRED|DISABLED>
# @<domain> D TLS_CERT <OPTIONAL|REQUIRED>
# @<domain> D TLS_CIPHERS <cipher string>
#
# Override the default TLS settings.

# @<domain> D QUEUE_WAIT <min> <max>
#
# Override the default queue timing.

# @<domain> D PUNTING <ENABLED|DISABLED>
#
# Control whether messages are eligible to be punted.

# Timeouts
#
# These variables set specific timeouts for various parts of the mail
# transaction.
#
#RECEIVE_GLOBAL_SESSION_TIMEOUT 0
#RECEIVE_TLS_ACCEPT_TIMEOUT 300
#RECEIVE_COMMAND_INACTIVITY_TIMEOUT 3600
#RECEIVE_COMMAND_LINE_TIMEOUT 600
#RECEIVE_DATA_SESSION_TIMEOUT 3600
#RECEIVE_DATA_LINE_TIMEOUT 300
#
#DELIVER_TLS_CONNECT_TIMEOUT 300
#DELIVER_COMMAND_LINE_TIMEOUT 300
#DELIVER_DATA_LINE_TIMEOUT 0
#DELIVER_DATA_SESSION_TIMEOUT 0

# Tarpit Times
#
# If a more specific tarpit time is not set, SMTP_TARPIT_DEFAULT will
# be used for that portion of a tarpitted connection.
#
#SMTP_TARPIT_DEFAULT 120
#SMTP_TARPIT_CONNECT 0
#SMTP_TARPIT_MAIL 0
#SMTP_TARPIT_RCPT 0
#SMTP_TARPIT_DATA 0
#SMTP_TARPIT_DATA_EOF 0

# DEBUG_LOGGING [n]
#
# Sets or increments the debug level.
#
#DEBUG_LOGGING 1

# SMTP_LISTEN_BACKLOG <max>
#
# Set the maximum socket backlog.
#
#SMTP_LISTEN_BACKLOG 64

# SYNC <ON|OFF>
#
# Enabling SYNC will provide stronger protection against data loss at
# the cost of some performance.
#
#SYNC OFF

# DNS_AUTO_CONFIG <ON|OFF>
#
# Accept mail for any hostname that lists us as an MX.
#
#DNS_AUTO_CONFIG OFF

# Child process limits
#
#MAX_Q_RUNNERS_LAUNCH 10
#MAX_Q_RUNNERS_SLOW 250
#MAX_Q_RUNNERS_LOCAL 25
#MAX_Q_RUNNERS_RECEIVE 0

# Miscellaneous settings that are hopefully useful for JAIL
#
# MID_LIST <ON|OFF>
# SENDER_LIST <ON|OFF>
# JAIL_BOUNCE_ADDRESS <address>
# JAIL_BOUNCES <ON|OFF>
# JAIL_LOCAL <ON|OFF>

# Internal Tuning
#
# You probably don't need to change these.
#
#DISK_READ_INTERVAL 60
#COMMAND_READ_LIMIT 10
#DISK_READ_LIMIT 10
#EXPAND_INTERVAL 60
#JAIL_CLEANUP_INTERVAL 14400

# BITBUCKET <seconds>
#
# This will completely disable mail delivery; instead, a delivery
# attempt will wait the specified number of seconds and then return
# success. You do not want to enable this on a production system.
#
#BITBUCKET 0

